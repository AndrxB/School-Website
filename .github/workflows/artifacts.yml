name: Release artifact

on:
  workflow_run:
    workflows: ["Bump Version and Create Release"]  # The name of the workflow you want to depend on
    types:
      - completed  # Triggers this workflow when the specified workflow is completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history, including tags

      # Step 2: Set up Node.js (specify the version you need)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Use the Node.js version your project requires

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the React app
      - name: Build the React app
        run: npm run build

      # Step 5: Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: react-build
          path: ./dist/**
      
      
  release:
    runs-on: ubuntu-latest
    needs: build  # Ensure it runs after the build job

    

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history, including tags
    
    # Step 1: Download the artifacts from the build job
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: react-build  # Name of the artifact uploaded in the build job
        path: ./dist  # Download the artifact to this path

    
    # Step 2: Get latest tag
    - name: Get latest tag
      id: get_tag
      run: |
        git fetch --tags
        LATEST_TAG=$(git describe --tags --abbrev=0 || echo "No tags found")
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

    # Step 3: Create GitHub Release using the downloaded dist folder
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.latest_tag }}  # Use the latest tag here
        files: |
            ./dist/**  # Include all files in dist folder in the release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
